/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as InstructorsRouteImport } from './routes/instructors/route'
import { Route as PublicRouteImport } from './routes/_public/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as InstructorsIndexImport } from './routes/instructors/index'
import { Route as PublicIndexImport } from './routes/_public/index'
import { Route as PublicAboutImport } from './routes/_public/about'
import { Route as AuthSigninImport } from './routes/_auth/signin'
import { Route as AuthRegisterImport } from './routes/_auth/register'
import { Route as StudentsStudentIdIndexImport } from './routes/students/$studentId/index'
import { Route as StudentsStudentIdCartImport } from './routes/students/$studentId/cart'

// Create/Update Routes

const InstructorsRouteRoute = InstructorsRouteImport.update({
  path: '/instructors',
  getParentRoute: () => rootRoute,
} as any)

const PublicRouteRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const InstructorsIndexRoute = InstructorsIndexImport.update({
  path: '/',
  getParentRoute: () => InstructorsRouteRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  path: '/',
  getParentRoute: () => PublicRouteRoute,
} as any)

const PublicAboutRoute = PublicAboutImport.update({
  path: '/about',
  getParentRoute: () => PublicRouteRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  path: '/signin',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)

const StudentsStudentIdIndexRoute = StudentsStudentIdIndexImport.update({
  path: '/students/$studentId/',
  getParentRoute: () => rootRoute,
} as any)

const StudentsStudentIdCartRoute = StudentsStudentIdCartImport.update({
  path: '/students/$studentId/cart',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRoute
    }
    '/instructors': {
      id: '/instructors'
      path: '/instructors'
      fullPath: '/instructors'
      preLoaderRoute: typeof InstructorsRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof AuthRouteImport
    }
    '/_public/about': {
      id: '/_public/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof PublicAboutImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicRouteImport
    }
    '/instructors/': {
      id: '/instructors/'
      path: '/'
      fullPath: '/instructors/'
      preLoaderRoute: typeof InstructorsIndexImport
      parentRoute: typeof InstructorsRouteImport
    }
    '/students/$studentId/cart': {
      id: '/students/$studentId/cart'
      path: '/students/$studentId/cart'
      fullPath: '/students/$studentId/cart'
      preLoaderRoute: typeof StudentsStudentIdCartImport
      parentRoute: typeof rootRoute
    }
    '/students/$studentId/': {
      id: '/students/$studentId/'
      path: '/students/$studentId'
      fullPath: '/students/$studentId'
      preLoaderRoute: typeof StudentsStudentIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthSigninRoute: typeof AuthSigninRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthRegisterRoute: AuthRegisterRoute,
  AuthSigninRoute: AuthSigninRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface PublicRouteRouteChildren {
  PublicAboutRoute: typeof PublicAboutRoute
  PublicIndexRoute: typeof PublicIndexRoute
}

const PublicRouteRouteChildren: PublicRouteRouteChildren = {
  PublicAboutRoute: PublicAboutRoute,
  PublicIndexRoute: PublicIndexRoute,
}

const PublicRouteRouteWithChildren = PublicRouteRoute._addFileChildren(
  PublicRouteRouteChildren,
)

interface InstructorsRouteRouteChildren {
  InstructorsIndexRoute: typeof InstructorsIndexRoute
}

const InstructorsRouteRouteChildren: InstructorsRouteRouteChildren = {
  InstructorsIndexRoute: InstructorsIndexRoute,
}

const InstructorsRouteRouteWithChildren =
  InstructorsRouteRoute._addFileChildren(InstructorsRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof PublicRouteRouteWithChildren
  '/instructors': typeof InstructorsRouteRouteWithChildren
  '/register': typeof AuthRegisterRoute
  '/signin': typeof AuthSigninRoute
  '/about': typeof PublicAboutRoute
  '/': typeof PublicIndexRoute
  '/instructors/': typeof InstructorsIndexRoute
  '/students/$studentId/cart': typeof StudentsStudentIdCartRoute
  '/students/$studentId': typeof StudentsStudentIdIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteRouteWithChildren
  '/register': typeof AuthRegisterRoute
  '/signin': typeof AuthSigninRoute
  '/about': typeof PublicAboutRoute
  '/': typeof PublicIndexRoute
  '/instructors': typeof InstructorsIndexRoute
  '/students/$studentId/cart': typeof StudentsStudentIdCartRoute
  '/students/$studentId': typeof StudentsStudentIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_public': typeof PublicRouteRouteWithChildren
  '/instructors': typeof InstructorsRouteRouteWithChildren
  '/_auth/register': typeof AuthRegisterRoute
  '/_auth/signin': typeof AuthSigninRoute
  '/_public/about': typeof PublicAboutRoute
  '/_public/': typeof PublicIndexRoute
  '/instructors/': typeof InstructorsIndexRoute
  '/students/$studentId/cart': typeof StudentsStudentIdCartRoute
  '/students/$studentId/': typeof StudentsStudentIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/instructors'
    | '/register'
    | '/signin'
    | '/about'
    | '/'
    | '/instructors/'
    | '/students/$studentId/cart'
    | '/students/$studentId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/register'
    | '/signin'
    | '/about'
    | '/'
    | '/instructors'
    | '/students/$studentId/cart'
    | '/students/$studentId'
  id:
    | '__root__'
    | '/_auth'
    | '/_public'
    | '/instructors'
    | '/_auth/register'
    | '/_auth/signin'
    | '/_public/about'
    | '/_public/'
    | '/instructors/'
    | '/students/$studentId/cart'
    | '/students/$studentId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  PublicRouteRoute: typeof PublicRouteRouteWithChildren
  InstructorsRouteRoute: typeof InstructorsRouteRouteWithChildren
  StudentsStudentIdCartRoute: typeof StudentsStudentIdCartRoute
  StudentsStudentIdIndexRoute: typeof StudentsStudentIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  PublicRouteRoute: PublicRouteRouteWithChildren,
  InstructorsRouteRoute: InstructorsRouteRouteWithChildren,
  StudentsStudentIdCartRoute: StudentsStudentIdCartRoute,
  StudentsStudentIdIndexRoute: StudentsStudentIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_public",
        "/instructors",
        "/students/$studentId/cart",
        "/students/$studentId/"
      ]
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/register",
        "/_auth/signin"
      ]
    },
    "/_public": {
      "filePath": "_public/route.tsx",
      "children": [
        "/_public/about",
        "/_public/"
      ]
    },
    "/instructors": {
      "filePath": "instructors/route.tsx",
      "children": [
        "/instructors/"
      ]
    },
    "/_auth/register": {
      "filePath": "_auth/register.tsx",
      "parent": "/_auth"
    },
    "/_auth/signin": {
      "filePath": "_auth/signin.tsx",
      "parent": "/_auth"
    },
    "/_public/about": {
      "filePath": "_public/about.tsx",
      "parent": "/_public"
    },
    "/_public/": {
      "filePath": "_public/index.tsx",
      "parent": "/_public"
    },
    "/instructors/": {
      "filePath": "instructors/index.tsx",
      "parent": "/instructors"
    },
    "/students/$studentId/cart": {
      "filePath": "students/$studentId/cart.tsx"
    },
    "/students/$studentId/": {
      "filePath": "students/$studentId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
